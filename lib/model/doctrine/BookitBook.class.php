<?php

/**
 * BookitBook
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    bookitfree
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BookitBook extends BaseBookitBook
{

  public function extend($force = false)
  {
    if (!$force && !$this->expiresSoon()) {
      return false;
    }

    $this->setExpiresAt(date('Y-m-d', time() + 86400 * sfConfig::get('app_active_days')));
    $this->save();

    return true;
  }

  public function save(Doctrine_Connection $conn = null)
  {
    if ($this->isNew() && !$this->getExpiresAt()) {
      $now = $this->getCreatedAt() ? $this->getDateTimeObject('created_at')->format('U') : time();
      $this->setExpiresAt(date('Y-m-d H:i:s', $now + 86400 * 30));
    }

    if (!$this->getToken()) {
      $this->setToken(sha1($this->getEmail() . rand(11111, 99999)));
    }

    return parent::save($conn);

    $ret = parent::save($conn);
    $this->updateLuceneIndex();
    return $ret;

    $conn = $conn ? $conn : $this->getTable()->getConnection();
    $conn->beginTransaction();
    try {
      $ret = parent::save($conn);

      $this->updateLuceneIndex();

      $conn->commit();

      return $ret;
    } catch (Exception $e) {
      $conn->rollBack();
      throw $e;
    }
  }

  public function updateLuceneIndex()
  {
    $index = BookitBookTable::getLuceneIndex();

    // remove existing entries
    foreach ($index->find('pk:' . $this->getId()) as $hit) {
      $index->delete($hit->id);
    }

    // don't index expired and non-activated books
    if ($this->isExpired() || !$this->getIsActivated()) {
      return;
    }

    $doc = new Zend_Search_Lucene_Document();

    // store book primary key to identify it in the search results
    $doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));

    // index book fields
    $doc->addField(Zend_Search_Lucene_Field::UnStored('title', $this->getPosition(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::UnStored('author', $this->getCompany(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::UnStored('isbn', $this->getLocation(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::UnStored('description', $this->getDescription(), 'utf-8'));

    // add book to the index
    $index->addDocument($doc);
    $index->commit();
  }

  public function delete(Doctrine_Connection $conn = null)
  {
    $index = BookitBookTable::getLuceneIndex();

    foreach ($index->find('pk:' . $this->getId()) as $hit) {
      $index->delete($hit->id);
    }

    return parent::delete($conn);
  }

}